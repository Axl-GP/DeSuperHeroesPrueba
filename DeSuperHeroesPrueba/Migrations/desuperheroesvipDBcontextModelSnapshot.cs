// <auto-generated />
using System;
using DeSuperHeroesPrueba.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeSuperHeroesPrueba.Migrations
{
    [DbContext(typeof(desuperheroesvipDBcontext))]
    partial class desuperheroesvipDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RNC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.Factura", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("ClienteID");

                    b.ToTable("factura");
                });

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Stockid")
                        .HasColumnType("int");

                    b.Property<int>("idStock")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("Stockid");

                    b.ToTable("producto");
                });

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.producto_cliente", b =>
                {
                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<int>("idcliente")
                        .HasColumnType("int");

                    b.Property<int>("idproducto_cliente")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("clienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<int?>("productoid")
                        .HasColumnType("int");

                    b.HasKey("idproducto", "idcliente", "idproducto_cliente");

                    b.HasIndex("clienteID");

                    b.HasIndex("productoid");

                    b.ToTable("producto_cliente");
                });

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.producto_proveedor", b =>
                {
                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<int>("idproducto_proveedor")
                        .HasColumnType("int");

                    b.Property<int>("idproveedor")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaImporte")
                        .HasColumnType("datetime2");

                    b.Property<int?>("productoid")
                        .HasColumnType("int");

                    b.Property<int?>("proveedorid")
                        .HasColumnType("int");

                    b.HasKey("idproducto", "idproducto_proveedor", "idproveedor");

                    b.HasIndex("productoid");

                    b.HasIndex("proveedorid");

                    b.ToTable("producto_proveedor");
                });

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.proveedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RNC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("proveedor");
                });

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.stock", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RNC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("stock");
                });

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.Factura", b =>
                {
                    b.HasOne("DeSuperHeroesPrueba.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");
                });

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.producto", b =>
                {
                    b.HasOne("DeSuperHeroesPrueba.Models.stock", "Stock")
                        .WithMany()
                        .HasForeignKey("Stockid");
                });

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.producto_cliente", b =>
                {
                    b.HasOne("DeSuperHeroesPrueba.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteID");

                    b.HasOne("DeSuperHeroesPrueba.Models.producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoid");
                });

            modelBuilder.Entity("DeSuperHeroesPrueba.Models.producto_proveedor", b =>
                {
                    b.HasOne("DeSuperHeroesPrueba.Models.producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoid");

                    b.HasOne("DeSuperHeroesPrueba.Models.proveedor", "proveedor")
                        .WithMany()
                        .HasForeignKey("proveedorid");
                });
#pragma warning restore 612, 618
        }
    }
}
